// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      ROLE     @default(USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  profile   Profile?

  @@index([role])
  @@index([email])
  @@map("accounts")
}

enum ROLE {
  USER
  ADMIN
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  firstName String?  @map("first_name") @db.VarChar(50)
  lastName  String?  @map("last_name") @db.VarChar(50)
  about     String?  @db.VarChar(500)
  accountId Int      @unique @map("account_id")
  account   Account  @relation(fields: [accountId], references: [id])
  boards    Board[]

  @@index([firstName, lastName])
  @@map("profiles")
}

model Board {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  name      String      @db.VarChar(255)
  isPublic  Boolean     @default(false) @map("is_public")
  profileId Int         @map("profile_id")
  profile   Profile     @relation(fields: [profileId], references: [id])
  pins      BoardPins[]

  @@index([isPublic])
  @@map("boards")
}

model Pin {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  name      String      @db.VarChar(255)
  image     String      @db.VarChar(500)
  boards    BoardPins[]

  @@map("pins")
}

model BoardPins {
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  pinId     Int
  pins      Pin      @relation(fields: [pinId], references: [id])
  boardId   Int
  board     Board    @relation(fields: [boardId], references: [id])

  @@id([pinId, boardId])
  @@map("board_pins")
}
